{"version":3,"file":"backbone-request-99xp.min.js","sources":["../src/http.js","../src/backbone-request-99xp.js"],"sourcesContent":["import _ from 'underscore-99xp';\nimport https from 'https';\nimport http from 'http';\n\nvar exec = function (options, req = null, res = null) {\n    if (typeof options.url !== 'string' ||\n            // Accept to execute http requests without receiving res object if callbacks are present in options\n                    (!res && _.size(_.pick(options, 'then', 'catch')) < 2)) {\n        return false;\n    }\n\n    var reqOpts = _.defaults(_.pick(options, 'url', 'method', 'headers', 'data', 'timeout'), {\n        method: 'GET',\n        rejectUnauthorized: false,\n        headers: {},\n        timeout: 18000000\n    }, !options.url ? {} : _.parseUrl(options.url));\n\n    // default promise calls\n    (typeof options.then !== 'function') && (options.then = (response, data, _req, _res) => {\n        _res.status(response.statusCode).send(data);\n    });\n    (typeof options.finally !== 'function') && (options.finally = () => {\n    });\n    (typeof options.catch !== 'function') && (options.catch = (response, data, _req, _res) => {\n        try {\n            if (typeof data !== 'object') {\n                try {\n                    data = JSON.parse(data);\n                } catch (e) {\n                    data = {\n                        message: data\n                    };\n                }\n            }\n\n            var status = _.isObject(response) ? response.statusCode || 500 : 500;\n            _res.status(status).send(JSON.stringify(data));\n        } catch (e) {\n            _res.status(500).send(JSON.stringify({\n                message: 'Internal Failure'\n            }));\n        }\n    });\n\n    if (!reqOpts.rejectUnauthorized) {\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n    }\n\n    if (reqOpts.method !== 'GET' && reqOpts.data) {\n        reqOpts.headers['Content-Length'] = Buffer.byteLength(reqOpts.data);\n    }\n\n    return new Promise(_.partial((_o, resolve, reject) => {\n\n        const httprequest = defineLib(_o);\n        const r = httprequest.request(_.omit(_o, 'data'), resp => {\n            /*resp.setEncoding('utf8');*/\n\n            resp.on('data', chunk => {\n                var data = parseBuffer(Buffer.concat([chunk]).toString());\n                if (/^2\\d{2}/.test(resp.statusCode.toString())) {\n                    options.then(resp, data, req, res, options);\n                    resolve();\n                } else {\n                    options.catch(resp, data, options, {\n                        data,\n                        status: resp.statusCode,\n                        response: resp\n                    });\n                    reject(data, resp);\n                }\n            });\n\n            /*resp.on('end', error => {\n             _.partial((_req, _res, o, err, xhr) => options.catch(err, _req, _res, xhr), req, res, options)(error, r);\n             });*/\n        });\n        r.on('error', error => {\n            var message;\n            try {\n                message = JSON.parse(error);\n            } catch (e) {\n                message = error;\n            }\n            options.catch(r, message, req, res, options);\n\n            reject(message, r);\n        });\n\n        r.on('timeout', () => {\n            request.abort();\n            _.partial((_req, _res, o, err, xhr) => options.catch(err, _req, _res, xhr), req, res, options)('timeout', r);\n            reject('timeout');\n        });\n\n        if (_o.method !== 'GET' && _o.data) {\n            r.write(_o.data);\n        }\n\n        r.end();\n\n    }, reqOpts)).catch((e) => {\n    });\n\n};\n\nvar defineLib = function (o) {\n    if (o.url) {\n        if (/https/.test(o.url)) {\n            return https;\n        }\n        return http;\n    }\n};\nvar parseBuffer = function (b) {\n    try {\n        return JSON.parse(b);\n    } catch (e) {\n        return b;\n    }\n};\n\nexport default {\n    exec,\n    defineLib,\n    parseBuffer\n};\n","// [backbone-request-99xp](https://github.com/brunnofoggia/backbone-request-99xp) is an integration that makes possible to use\n// [backbone](https://backbonejs.org) with promises in nodejs. That's done by integrating it with [axios](https://github.com/axios/axios).\n\n\n// Examples\n// --------------\n\n// Considere this Model as base for the examples\n//\n//     var Model = bbr.Model.extend({\n//         urlRoot: 'https://tapi.99xp.org/crud/test'\n//     }),\n\n// * getting row \n//   1. with listener\n//\n//          model = new Model({id: 35});\n//          model.once('sync', ()=>{\n//              console.log(model.attributes);\n//          });\n//          model.fetch({headers: {...}});\n//   2. with promise\n//\n//          model = new Model({id: 35});\n//          return model.fetchp((m, o, resolve, reject) => {\n//              console.log(m.attributes);\n//              resolve();\n//          }, {headers: {...}});\n// * inserting row \n//   1. with listener\n//\n//          model = new Model({name: 'new person', age: 10});\n//          model.once('sync', ()=>{\n//              console.log(model.attributes);\n//          });\n//          model.save();\n//   2. with promise\n//\n//          model = new Model({name: 'new person', age: 10});\n//          return model.savep((m, o, resolve, reject) => {\n//              console.log(m.attributes);\n//              resolve();\n//          });\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport Backbone from 'backbone';\nimport _ from 'underscore-99xp';\nimport http from './http';\n\nvar BackboneRequest = _.extend(_.clone(Backbone), _.clone(http));\n\ndelete BackboneRequest.VERSION;\n\n// Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n// will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n// set a `X-Http-Method-Override` header.\nBackboneRequest.emulateHTTP = false;\n\n// Turn on `emulateJSON` to support legacy servers that can't deal with direct\n// `application/json` requests ... this will encode the body as\n// `application/x-www-form-urlencoded` instead and will send the model in a\n// form param named `model`.\nBackboneRequest.emulateJSON = false;\n\n// Sync engine modeled over default backbone.js ajax syncing engine\n// It will make model rest methods to work for both, node and browser\nBackboneRequest.sync = function (method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n        emulateHTTP: BackboneRequest.emulateHTTP,\n        emulateJSON: BackboneRequest.emulateJSON,\n        headers: {}\n    });\n\n    // Default JSON-request options.\n    var params = _.extend({}, options, {\n        type: type,\n        dataType: 'json'\n    });\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n        params.url = _.result(model, 'url') || BackboneRequest.urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (model && (method === 'create' || method === 'update' || method === 'patch')) {\n        params.contentType = 'application/json';\n        if (options.data == null) {\n            params.data = (options.attrs || model.toJSON(options));\n        } else {\n            params.data = options.data;\n        }\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n        params.contentType = 'application/x-www-form-urlencoded';\n        params.data = params.data ? {\n            model: params.data\n        } : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n        params.type = 'POST';\n        if (options.emulateJSON) {\n            params.data._method = type;\n        }\n        params.headers['X-HTTP-Method-Override'] = type;\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n        params.processData = false;\n    }\n\n    // Request & Parse engine\n    var reqOpts = _.extend({\n        url: params.url,\n        method: params.type,\n        headers: params.headers\n    }, _.omit(options, 'type', 'dataType', 'emulateHTTP', 'emulateJSON'));\n\n    if (params.data) {\n        reqOpts.data = JSON.stringify(params.data);\n    }\n\n    reqOpts.headers['content-type'] = params.contentType || 'application/json';\n\n    // Promise calls\n    reqOpts.then = _.partial((m, o, response, data) => {\n        typeof o.success === 'function' && o.success(data, response);\n    }, this, options);\n    reqOpts.catch = _.bind(_.partial((m, o, response, err) => {\n        this._reqErr = response;\n        typeof o.error === 'function' && o.error({response: response, error: err});\n    }, this, options), this);\n\n\n    return BackboneRequest.exec(reqOpts);\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n};\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneRequest.urlError = function () {\n    throw new Error('A \"url\" property or function must be specified');\n};\n\n\n_.map(['Events'], (x) => BackboneRequest[x] = _.clone(Backbone[x]));\n// Custom behaviors\nvar ext = {\n    'Model': {\n        // constructor\n        initialize(data = {}, options = {}) {\n            this.setRouterParameters(options.req, options.res);\n        },\n        // easier way to have express variables inside the object to use them in callbacks\n        setRouterParameters(req = null, res = null) {\n            this._req = req;\n            this._res = res;\n        },\n        // Replacing prototype of sync to call custom sync method\n        sync() {\n            return BackboneRequest.sync.apply(this, arguments);\n        },\n        // Shortcuts for promise use\n        fetchp(fn, o = {}) {\n            o.success = fn;\n            return this.fetch(o);\n        },\n        savep(fn, o = {}) {\n            o.success = fn;\n            return this.save(null, o);\n        },\n        destroyp(fn, o = {}) {\n            o.success = fn;\n            return this.destroy(o);\n        },\n    },\n    'Collection': {\n        // Replacing prototype of sync to call custom sync method\n        sync() {\n            return BackboneRequest.sync.apply(this, arguments);\n        },\n    }\n};\n_.map(['Model', 'Collection'], (x) => BackboneRequest[x] = Backbone[x].extend(ext[x]));\n\n\nexport default BackboneRequest;\n"],"names":["defineLib","o","url","test","https","http","parseBuffer","b","JSON","parse","e","exec","options","req","res","_","size","pick","reqOpts","defaults","method","rejectUnauthorized","headers","timeout","parseUrl","then","response","data","_req","_res","status","statusCode","send","finally","catch","message","isObject","stringify","process","env","NODE_TLS_REJECT_UNAUTHORIZED","Buffer","byteLength","Promise","partial","_o","resolve","reject","r","request","omit","resp","on","chunk","concat","toString","error","abort","err","xhr","write","end","BackboneRequest","extend","clone","Backbone","VERSION","emulateHTTP","emulateJSON","sync","model","type","methodMap","params","dataType","result","urlError","contentType","attrs","toJSON","_method","processData","m","success","this","bind","_reqErr","Error","map","x","ext","initialize","setRouterParameters","apply","arguments","fetchp","fn","fetch","savep","save","destroyp","destroy"],"mappings":"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"}