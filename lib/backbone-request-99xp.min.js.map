{"version":3,"file":"backbone-request-99xp.min.js","sources":["../src/http.js","../src/backbone-request-99xp.js"],"sourcesContent":["import _ from 'underscore-99xp';\nimport https from 'https';\nimport http from 'http';\nimport AppException from 'app-exception';\n\nvar exec = function (options, req = null, res = null) {\n    if (typeof options.url !== 'string' ||\n            // Accept to execute http requests without receiving res object if callbacks are present in options\n                    (!res && _.size(_.pick(options, 'then', 'catch')) < 2)) {\n        return false;\n    }\n\n    var defaults = _.defaults({\n        method: 'GET',\n        rejectUnauthorized: false,\n        headers: {\n            'content-type': 'application/json'\n        },\n        timeout: 18000000\n    }, !options.url ? {} : _.parseUrl(options.url));\n\n    var reqOpts = _.defaults2(_.pick(options, 'url', 'method', 'headers', 'data', 'timeout'), defaults);\n\n    // default promise calls\n    (typeof options.then !== 'function') && (options.then = (response, data, _req, _res) => {\n        throw new AppException(JSON.stringify(data), 0, response.statusCode || 200);\n    });\n    (typeof options.finally !== 'function') && (options.finally = () => {\n    });\n    (typeof options.catch !== 'function') && (options.catch = (response, data, _req, _res) => {\n        try {\n            if (typeof data !== 'object') {\n                try {\n                    data = JSON.parse(data);\n                } catch (e) {\n                    data = {\n                        message: data\n                    };\n                }\n            }\n\n            var status = _.isObject(response) ? response.statusCode || 500 : 500;\n            throw new AppException(JSON.stringify(data), 0, status);\n        } catch (e) {\n            throw AppException.internalServerError(e);\n        }\n    });\n\n    if (!reqOpts.rejectUnauthorized) {\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n    }\n\n    if (reqOpts.method !== 'GET' && reqOpts.data) {\n        if (_.isJSON(reqOpts.data)) {\n            reqOpts.data = JSON.stringify(reqOpts.data);\n        }\n        reqOpts.headers['Content-Length'] = Buffer.byteLength(reqOpts.data);\n    }\n\n    return new Promise(_.partial((_o, resolve, reject) => {\n\n        const httprequest = defineLib(_o);\n        const r = httprequest.request(_.omit(_o, 'data'), resp => {\n            /*resp.setEncoding('utf8');*/\n\n            resp.on('data', chunk => {\n                var data = parseBuffer(Buffer.concat([chunk]).toString());\n                if (/^2\\d{2}/.test(resp.statusCode.toString())) {\n                    options.then(resp, data, req, res, options);\n                    resolve();\n                } else {\n                    options.catch(resp, data, options, {\n                        data,\n                        status: resp.statusCode,\n                        response: resp\n                    });\n                    reject(data, resp);\n                }\n            });\n\n            /*resp.on('end', error => {\n             _.partial((_req, _res, o, err, xhr) => options.catch(err, _req, _res, xhr), req, res, options)(error, r);\n             });*/\n        });\n        r.on('error', error => {\n            var message;\n            try {\n                message = JSON.parse(error);\n            } catch (e) {\n                message = error;\n            }\n            options.catch(r, message, req, res, options);\n\n            reject(message, r);\n        });\n\n        r.on('timeout', () => {\n            request.abort();\n            _.partial((_req, _res, o, err, xhr) => options.catch(err, _req, _res, xhr), req, res, options)('timeout', r);\n            reject('timeout');\n        });\n\n        if (_o.method !== 'GET' && _o.data) {\n            r.write(_o.data);\n        }\n\n        r.end();\n\n    }, reqOpts));\n\n};\n\nvar defineLib = function (o) {\n    if (o.url) {\n        if (/https/.test(o.url)) {\n            return https;\n        }\n        return http;\n    }\n};\nvar parseBuffer = function (b) {\n    try {\n        return JSON.parse(b);\n    } catch (e) {\n        return b;\n    }\n};\n\nexport default {\n    exec,\n    defineLib,\n    parseBuffer\n};\n","// [backbone-request-99xp](https://github.com/brunnofoggia/backbone-request-99xp) is an integration that makes possible to use\n// [backbone](https://backbonejs.org) with promises in nodejs. That's done by integrating it with [axios](https://github.com/axios/axios).\n\n\n// Examples\n// --------------\n\n// Considere this Model as base for the examples\n//\n//     var Model = bbr.Model.extend({\n//         urlRoot: 'https://tapi.99xp.org/crud/test'\n//     }),\n\n// * getting row \n//   1. with listener\n//\n//          model = new Model({id: 35});\n//          model.once('sync', ()=>{\n//              console.log(model.attributes);\n//          });\n//          model.fetch({headers: {...}});\n//   2. with promise\n//\n//          model = new Model({id: 35});\n//          return model.fetchp((m, o, resolve, reject) => {\n//              console.log(m.attributes);\n//              resolve();\n//          }, {headers: {...}});\n// * inserting row \n//   1. with listener\n//\n//          model = new Model({name: 'new person', age: 10});\n//          model.once('sync', ()=>{\n//              console.log(model.attributes);\n//          });\n//          model.save();\n//   2. with promise\n//\n//          model = new Model({name: 'new person', age: 10});\n//          return model.savep((m, o, resolve, reject) => {\n//              console.log(m.attributes);\n//              resolve();\n//          });\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport Backbone from 'backbone';\nimport _ from 'underscore-99xp';\nimport AppException from 'app-exception';\nimport http from './http';\n\nvar BackboneRequest = _.extend(_.clone(Backbone), _.clone(http));\n\ndelete BackboneRequest.VERSION;\n\n// Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n// will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n// set a `X-Http-Method-Override` header.\nBackboneRequest.emulateHTTP = false;\n\n// Turn on `emulateJSON` to support legacy servers that can't deal with direct\n// `application/json` requests ... this will encode the body as\n// `application/x-www-form-urlencoded` instead and will send the model in a\n// form param named `model`.\nBackboneRequest.emulateJSON = false;\n\n// Sync engine modeled over default backbone.js ajax syncing engine\n// It will make model rest methods to work for both, node and browser\nBackboneRequest.sync = function (method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n        emulateHTTP: BackboneRequest.emulateHTTP,\n        emulateJSON: BackboneRequest.emulateJSON,\n        headers: {}\n    });\n\n    // Default JSON-request options.\n    var params = _.extend({}, options, {\n        type: type,\n        dataType: 'json'\n    });\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n        params.url = _.result(model, 'url') || BackboneRequest.urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (model && (method === 'create' || method === 'update' || method === 'patch')) {\n        params.contentType = 'application/json';\n        if (options.data == null) {\n            params.data = (options.attrs || model.toJSON(options));\n        } else {\n            params.data = options.data;\n        }\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n        params.contentType = 'application/x-www-form-urlencoded';\n        params.data = params.data ? {\n            model: params.data\n        } : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n        params.type = 'POST';\n        if (options.emulateJSON) {\n            params.data._method = type;\n        }\n        params.headers['X-HTTP-Method-Override'] = type;\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n        params.processData = false;\n    }\n\n    // Request & Parse engine\n    var reqOpts = _.extend({\n        url: params.url,\n        method: params.type,\n        headers: params.headers\n    }, _.omit(options, 'type', 'dataType', 'emulateHTTP', 'emulateJSON'));\n\n    if (params.data) {\n        reqOpts.data = JSON.stringify(params.data);\n    }\n\n    reqOpts.headers['content-type'] = params.contentType || 'application/json';\n\n    // Promise calls\n    reqOpts.then = _.partial((m, o, response, data) => {\n        typeof o.success === 'function' && o.success(data, response);\n    }, this, options);\n    reqOpts.catch = _.bind(_.partial((m, o, response, err) => {\n        this._reqErr = response;\n        typeof o.error === 'function' && o.error({response: response, error: err});\n    }, this, options), this);\n\n\n    return BackboneRequest.exec(reqOpts);\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n};\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneRequest.urlError = function () {\n    throw AppException.internalServerError('A \"url\" property or function must be specified');\n};\n\n\n_.map(['Events'], (x) => BackboneRequest[x] = _.clone(Backbone[x]));\n// Custom behaviors\nvar ext = {\n    'Model': {\n        // constructor\n        initialize(data = {}, options = {}) {\n            this.setRouterParameters(options.req, options.res);\n        },\n        // easier way to have express variables inside the object to use them in callbacks\n        setRouterParameters(req = null, res = null) {\n            this._req = req;\n            this._res = res;\n        },\n        // Replacing prototype of sync to call custom sync method\n        sync() {\n            return BackboneRequest.sync.apply(this, arguments);\n        },\n        // Shortcuts for promise use\n        fetchp(fn, o = {}) {\n            o.success = fn;\n            return this.fetch(o);\n        },\n        savep(fn, o = {}) {\n            o.success = fn;\n            return this.save(null, o);\n        },\n        destroyp(fn, o = {}) {\n            o.success = fn;\n            return this.destroy(o);\n        },\n    },\n    'Collection': {\n        // Replacing prototype of sync to call custom sync method\n        sync() {\n            return BackboneRequest.sync.apply(this, arguments);\n        },\n    }\n};\n_.map(['Model', 'Collection'], (x) => BackboneRequest[x] = Backbone[x].extend(ext[x]));\n\n\nexport default BackboneRequest;\n"],"names":["defineLib","o","url","test","https","http","parseBuffer","b","JSON","parse","e","exec","options","req","res","_","size","pick","defaults","method","rejectUnauthorized","headers","timeout","parseUrl","reqOpts","defaults2","then","response","data","_req","_res","AppException","stringify","statusCode","finally","catch","message","status","isObject","internalServerError","process","env","NODE_TLS_REJECT_UNAUTHORIZED","isJSON","Buffer","byteLength","Promise","partial","_o","resolve","reject","r","request","omit","resp","on","chunk","concat","toString","error","abort","err","xhr","write","end","BackboneRequest","extend","clone","Backbone","VERSION","emulateHTTP","emulateJSON","sync","model","type","methodMap","params","dataType","result","urlError","contentType","attrs","toJSON","_method","processData","m","success","this","bind","_reqErr","map","x","ext","initialize","setRouterParameters","apply","arguments","fetchp","fn","fetch","savep","save","destroyp","destroy"],"mappings":"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"}