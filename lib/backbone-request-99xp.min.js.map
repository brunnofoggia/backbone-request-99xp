{"version":3,"file":"backbone-request-99xp.min.js","sources":["../src/http.js","../src/backbone-request-99xp.js"],"sourcesContent":["// current version commented\n\nimport _ from 'underscore-99xp';\nimport https from 'https';\nimport http from 'http';\nimport AppException from 'app-exception';\n\nvar exec = function (options, req = null, res = null) {\n    if (typeof options.url !== 'string' ||\n            // Accept to execute http requests without receiving res object if callbacks are present in options\n                    (!res && _.size(_.pick(options, 'then', 'catch')) < 2)) {\n        return false;\n    }\n\n    var defaults = _.defaults({\n        method: 'GET',\n        rejectUnauthorized: false,\n        headers: {\n            'content-type': 'application/json'\n        },\n        timeout: 18000000\n    }, !options.url ? {} : _.parseUrl(options.url));\n\n    var reqOpts = _.defaults2(_.pick(options, 'url', 'method', 'headers', 'data', 'timeout'), defaults);\n\n    // default promise calls\n    (typeof options.then !== 'function') && (options.then = (response, data, _req, _res) => {\n        throw new AppException(JSON.stringify(data), 0, response.statusCode || 200);\n    });\n    (typeof options.finally !== 'function') && (options.finally = () => {\n    });\n    (typeof options.catch !== 'function') && (options.catch = (response, data, _req, _res) => {\n        try {\n            if (typeof data !== 'object') {\n                try {\n                    data = JSON.parse(data);\n                } catch (e) {\n                    data = {\n                        message: data\n                    };\n                }\n            }\n\n            var status = _.isObject(response) ? response.statusCode || 500 : 500;\n            throw new AppException(JSON.stringify(data), 0, status);\n        } catch (e) {\n            throw AppException.internalServerError(e);\n        }\n    });\n\n    if (!reqOpts.rejectUnauthorized) {\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n    }\n\n    if (reqOpts.method !== 'GET' && reqOpts.data) {\n        if (_.isJSON(reqOpts.data)) {\n            reqOpts.data = JSON.stringify(reqOpts.data);\n        }\n        reqOpts.headers['Content-Length'] = Buffer.byteLength(reqOpts.data);\n    }\n\n    return new Promise(_.partial((_o, resolve, reject) => {\n        const httprequest = defineLib(_o);\n\n        const r = httprequest.request(_.omit(_o, 'data'), resp => {\n            let chunks = [];\n            resp.setEncoding('utf8');\n            resp.on('data', chunk => { chunks.push(chunk);\n            });\n\n            /*resp.setEncoding('utf8');*/\n\n            resp.on('end', () => {\n                try {\n                    var rawData = (chunks[0] instanceof Buffer) || (chunks[0] instanceof Uint8Array) ? Buffer.concat(chunks) : chunks.join('');\n                    var data = rawData ? JSON.parse(rawData) : '';\n                    if(resp.statusCode<400) {\n                        resolve({resp, data, req, res, options});\n                    } else {\n                        reject({resp, data, req, res, options});\n                    }\n                } catch (e) {\n                    reject({resp, options, output: {\n                        data: e.message,\n                        status: 500\n                    }});\n                }\n            });\n        });\n        r.on('error', error => {\n            var message;\n            try {\n                message = JSON.parse(error);\n            } catch (e) {\n                message = error;\n            }\n            reject({resp: r, message, options, output: {\n                data: message,\n                status: 500,\n                response: r\n            }});\n        });\n\n        r.on('timeout', () => {\n            request.abort();\n            _.partial((_req, _res, o, err, xhr) => options.catch(err, _req, _res, xhr), req, res, options)('timeout', r);\n            reject('timeout');\n        });\n\n        if (_o.method !== 'GET' && _o.data) {\n            r.write(_o.data);\n        }\n\n        r.end();\n\n    }, reqOpts)).then((o)=>{\n        o.options.then(o.resp, o.data, o.req, o.res, o.options);\n    }).catch((o)=>{\n        o.options.catch(o.resp, o.data, o.options, o.output);\n    });\n\n};\n\nvar defineLib = function (o) {\n    if (o.url) {\n        if (/https/.test(o.url)) {\n            return https;\n        }\n        return http;\n    }\n};\nvar parseBuffer = function (b) {\n    try {\n        return JSON.parse(b);\n    } catch (e) {\n        return b;\n    }\n};\n\nexport default {\n    exec,\n    defineLib,\n    parseBuffer\n};\n","// [backbone-request-99xp](https://github.com/brunnofoggia/backbone-request-99xp) is an integration that makes possible to use\n// [backbone](https://backbonejs.org) with promises in nodejs. That's done by integrating it with [axios](https://github.com/axios/axios).\n\n\n// Examples\n// --------------\n\n// Considere this Model as base for the examples\n//\n//     var Model = bbr.Model.extend({\n//         urlRoot: 'https://tapi.99xp.org/crud/test'\n//     }),\n\n// * getting row \n//   1. with listener\n//\n//          model = new Model({id: 35});\n//          model.once('sync', ()=>{\n//              console.log(model.attributes);\n//          });\n//          model.fetch({headers: {...}});\n//   2. with promise\n//\n//          model = new Model({id: 35});\n//          return model.fetchp((m, o, resolve, reject) => {\n//              console.log(m.attributes);\n//              resolve();\n//          }, {headers: {...}});\n// * inserting row \n//   1. with listener\n//\n//          model = new Model({name: 'new person', age: 10});\n//          model.once('sync', ()=>{\n//              console.log(model.attributes);\n//          });\n//          model.save();\n//   2. with promise\n//\n//          model = new Model({name: 'new person', age: 10});\n//          return model.savep((m, o, resolve, reject) => {\n//              console.log(m.attributes);\n//              resolve();\n//          });\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport Backbone from 'backbone';\nimport AppException from 'app-exception';\nimport bbx from 'backbone-99xp';\nimport _ from 'underscore-99xp';\nimport http from './http';\n\nvar BackboneRequest = _.extend(_.clone(Backbone), _.clone(http));\n\ndelete BackboneRequest.VERSION;\n\n// Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n// will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n// set a `X-Http-Method-Override` header.\nBackboneRequest.emulateHTTP = false;\n\n// Turn on `emulateJSON` to support legacy servers that can't deal with direct\n// `application/json` requests ... this will encode the body as\n// `application/x-www-form-urlencoded` instead and will send the model in a\n// form param named `model`.\nBackboneRequest.emulateJSON = false;\n\n// Sync engine modeled over default backbone.js ajax syncing engine\n// It will make model rest methods to work for both, node and browser\nBackboneRequest.sync = function (method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n        emulateHTTP: BackboneRequest.emulateHTTP,\n        emulateJSON: BackboneRequest.emulateJSON,\n        headers: {}\n    });\n\n    // Default JSON-request options.\n    var params = _.extend({}, options, {\n        type: type,\n        dataType: 'json'\n    });\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n        params.url = _.result(model, 'url') || BackboneRequest.urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (model && (method === 'create' || method === 'update' || method === 'patch')) {\n        params.contentType = 'application/json';\n        if (options.data == null) {\n            params.data = (options.attrs || model.toJSON(options));\n        } else {\n            params.data = options.data;\n        }\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n        params.contentType = 'application/x-www-form-urlencoded';\n        params.data = params.data ? {\n            model: params.data\n        } : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n        params.type = 'POST';\n        if (options.emulateJSON) {\n            params.data._method = type;\n        }\n        params.headers['X-HTTP-Method-Override'] = type;\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n        params.processData = false;\n    }\n\n    // Request & Parse engine\n    var reqOpts = _.extend({\n        url: params.url,\n        method: params.type,\n        headers: params.headers\n    }, _.omit(options, 'type', 'dataType', 'emulateHTTP', 'emulateJSON'));\n\n    if (params.data) {\n        reqOpts.data = JSON.stringify(params.data);\n    }\n\n    reqOpts.headers['content-type'] = params.contentType || 'application/json';\n\n    // Promise calls\n    reqOpts.then = _.partial((m, o, response, data) => {\n        typeof o.success === 'function' && o.success(data, response);\n    }, this, options);\n    reqOpts.catch = _.bind(_.partial((m, o, response, err) => {\n        this._reqErr = response;\n        typeof o.error === 'function' && o.error({response: response, error: err});\n    }, this, options), this);\n\n\n    return BackboneRequest.exec(reqOpts);\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n};\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneRequest.urlError = function () {\n    throw AppException.internalServerError('A \"url\" property or function must be specified');\n};\n\n\n_.map(['Events'], (x) => BackboneRequest[x] = _.clone(Backbone[x]));\n// Custom behaviors\nvar ext = {\n    'Model': {\n        // constructor\n        initialize(data = {}, options = {}) {\n            this.setRouterParameters(options.req, options.res);\n        },\n        // easier way to have express variables inside the object to use them in callbacks\n        setRouterParameters(req = null, res = null) {\n            this._req = req;\n            this._res = res;\n        },\n        // Replacing prototype of sync to call custom sync method\n        sync() {\n            return BackboneRequest.sync.apply(this, arguments);\n        },\n        // Shortcuts for promise use\n        fetchp(fn, o = {}) {\n            o.success = fn;\n            return this.fetch(o);\n        },\n        savep(fn, o = {}) {\n            o.success = fn;\n            return this.save(null, o);\n        },\n        destroyp(fn, o = {}) {\n            o.success = fn;\n            return this.destroy(o);\n        },\n    },\n    'Collection': {\n        // Replacing prototype of sync to call custom sync method\n        sync() {\n            return BackboneRequest.sync.apply(this, arguments);\n        },\n    }\n};\n_.map(['Model', 'Collection'], (x) => BackboneRequest[x] = bbx[x.toLowerCase()].extend(ext[x]));\n\n\nexport default BackboneRequest;\n"],"names":["defineLib","o","url","test","https","http","exec","options","req","res","_","size","pick","defaults","method","rejectUnauthorized","headers","timeout","parseUrl","reqOpts","defaults2","then","response","data","_req","_res","AppException","JSON","stringify","statusCode","finally","catch","parse","e","message","status","isObject","internalServerError","process","env","NODE_TLS_REJECT_UNAUTHORIZED","isJSON","Buffer","byteLength","Promise","partial","_o","resolve","reject","r","request","omit","resp","chunks","setEncoding","on","chunk","push","rawData","Uint8Array","concat","join","output","error","abort","err","xhr","write","end","parseBuffer","b","BackboneRequest","extend","clone","Backbone","VERSION","emulateHTTP","emulateJSON","sync","model","type","methodMap","params","dataType","result","urlError","contentType","attrs","toJSON","_method","processData","m","success","this","bind","_reqErr","map","x","ext","initialize","setRouterParameters","apply","arguments","fetchp","fn","fetch","savep","save","destroyp","destroy","bbx","toLowerCase"],"mappings":"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"}